{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Coding\\\\LMS\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user data on mount if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      const token = localStorage.getItem('token');\n\n      // Skip if no token\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`${API_URL}/users/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(response.data.data.user);\n        // Store user ID for easy access\n        localStorage.setItem('userId', response.data.data.user._id);\n      } catch (err) {\n        console.error('Error loading user:', err);\n        // If token is invalid, clear it\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        setError('Session expired. Please login again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/users/login`, {\n        email,\n        password\n      });\n\n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.data.user._id);\n      setUser(response.data.data.user);\n      return response.data.data.user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed. Please try again.');\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/users/signup`, userData);\n\n      // Store token and user data\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.data.user._id);\n      setUser(response.data.data.user);\n      return response.data.data.user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed. Please try again.');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    setUser(null);\n  };\n\n  // Update user data\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updateUser,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","loadUser","token","localStorage","getItem","response","get","headers","Authorization","data","setItem","_id","err","console","removeItem","login","email","password","post","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","updateUser","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Coding/LMS/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// Create the authentication context\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load user data on mount if token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Skip if no token\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await axios.get(`${API_URL}/users/me`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        setUser(response.data.data.user);\r\n        // Store user ID for easy access\r\n        localStorage.setItem('userId', response.data.data.user._id);\r\n      } catch (err) {\r\n        console.error('Error loading user:', err);\r\n        // If token is invalid, clear it\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        setError('Session expired. Please login again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_URL}/users/login`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('userId', response.data.data.user._id);\r\n      setUser(response.data.data.user);\r\n      \r\n      return response.data.data.user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Login failed. Please try again.');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_URL}/users/signup`, userData);\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('userId', response.data.data.user._id);\r\n      setUser(response.data.data.user);\r\n      \r\n      return response.data.data.user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    setUser(null);\r\n  };\r\n\r\n  // Update user data\r\n  const updateUser = (userData) => {\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser,\r\n        isAuthenticated: !!user\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}