{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Coding\\\\LMS\\\\frontend\\\\src\\\\components\\\\assignments\\\\AssignmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Card, Container, Row, Col, Alert, Spinner } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_URL } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentForm = () => {\n  _s();\n  const {\n    courseId,\n    lessonId,\n    assignmentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(assignmentId ? true : false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [lessons, setLessons] = useState([]);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    totalPoints: 100,\n    isPublished: false,\n    lesson: lessonId || '' // Default to the lesson ID from URL params if available\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n\n        // Fetch lessons for the course\n        if (courseId) {\n          const lessonsResponse = await axios.get(`${API_URL}/courses/${courseId}/lessons`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setLessons(lessonsResponse.data.data.lessons);\n        }\n\n        // If editing, fetch assignment details\n        if (assignmentId) {\n          var _assignment$lesson;\n          const assignmentResponse = await axios.get(`${API_URL}/assignments/${assignmentId}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const assignment = assignmentResponse.data.data.assignment;\n          setFormData({\n            title: assignment.title,\n            description: assignment.description,\n            dueDate: assignment.dueDate ? new Date(assignment.dueDate).toISOString().split('T')[0] : '',\n            totalPoints: assignment.totalPoints,\n            isPublished: assignment.isPublished,\n            lesson: ((_assignment$lesson = assignment.lesson) === null || _assignment$lesson === void 0 ? void 0 : _assignment$lesson._id) || ''\n          });\n        }\n        setIsLoading(false);\n      } catch (err) {\n        setError('Failed to load data. Please try again.');\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [courseId, lessonId, assignmentId]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setError('');\n    try {\n      const token = localStorage.getItem('token');\n\n      // Prepare data to send\n      const assignmentData = {\n        ...formData,\n        course: courseId // Ensure the assignment is associated with the course\n      };\n      if (assignmentId) {\n        // Update existing assignment\n        await axios.patch(`${API_URL}/assignments/${assignmentId}`, assignmentData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        navigate(`/assignments/${assignmentId}`);\n      } else {\n        // Create new assignment\n        let endpoint = `${API_URL}/assignments`;\n\n        // If we have a lesson ID, use the lesson-specific endpoint\n        if (lessonId) {\n          endpoint = `${API_URL}/lessons/${lessonId}/assignments`;\n        } else if (courseId) {\n          endpoint = `${API_URL}/courses/${courseId}/assignments`;\n        }\n        const response = await axios.post(endpoint, assignmentData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        navigate(`/assignments/${response.data.data.assignment._id}`);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to save assignment. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '60vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"py-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h4\",\n            className: \"bg-primary text-white\",\n            children: assignmentId ? 'Edit Assignment' : 'Create New Assignment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"title\",\n                  value: formData.title,\n                  onChange: handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  name: \"description\",\n                  value: formData.description,\n                  onChange: handleChange,\n                  rows: 5,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), lessons.length > 0 && /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Lesson (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"lesson\",\n                  value: formData.lesson,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Select a Lesson --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), lessons.map(lesson => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: lesson._id,\n                    children: lesson.title\n                  }, lesson._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"Associate this assignment with a specific lesson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Due Date (optional)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"date\",\n                      name: \"dueDate\",\n                      value: formData.dueDate,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Total Points\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"number\",\n                      name: \"totalPoints\",\n                      value: formData.totalPoints,\n                      onChange: handleChange,\n                      min: \"1\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  name: \"isPublished\",\n                  id: \"publishedCheckbox\",\n                  label: \"Publish Assignment (make it visible to students)\",\n                  checked: formData.isPublished,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: () => navigate(courseId ? `/courses/${courseId}` : '/dashboard'),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  disabled: isSubmitting,\n                  children: isSubmitting ? 'Saving...' : assignmentId ? 'Update Assignment' : 'Create Assignment'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentForm, \"EZqDOk7DGQDwAz8YFqAPRChh40M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AssignmentForm;\nexport default AssignmentForm;\nvar _c;\n$RefreshReg$(_c, \"AssignmentForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Card","Container","Row","Col","Alert","Spinner","useNavigate","useParams","axios","API_URL","jsxDEV","_jsxDEV","AssignmentForm","_s","courseId","lessonId","assignmentId","navigate","isLoading","setIsLoading","isSubmitting","setIsSubmitting","error","setError","lessons","setLessons","formData","setFormData","title","description","dueDate","totalPoints","isPublished","lesson","fetchData","token","localStorage","getItem","lessonsResponse","get","headers","Authorization","data","_assignment$lesson","assignmentResponse","assignment","Date","toISOString","split","_id","err","handleChange","e","name","value","type","checked","target","prevData","handleSubmit","preventDefault","assignmentData","course","patch","endpoint","response","post","_err$response","_err$response$data","message","className","style","minHeight","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","md","Header","as","Body","variant","onSubmit","Group","Label","Control","onChange","required","rows","length","Select","map","Text","min","Check","id","label","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Coding/LMS/frontend/src/components/assignments/AssignmentForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Card, Container, Row, Col, Alert, Spinner } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../config';\r\n\r\nconst AssignmentForm = () => {\r\n  const { courseId, lessonId, assignmentId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(assignmentId ? true : false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [lessons, setLessons] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    dueDate: '',\r\n    totalPoints: 100,\r\n    isPublished: false,\r\n    lesson: lessonId || '' // Default to the lesson ID from URL params if available\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        // Fetch lessons for the course\r\n        if (courseId) {\r\n          const lessonsResponse = await axios.get(`${API_URL}/courses/${courseId}/lessons`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setLessons(lessonsResponse.data.data.lessons);\r\n        }\r\n        \r\n        // If editing, fetch assignment details\r\n        if (assignmentId) {\r\n          const assignmentResponse = await axios.get(`${API_URL}/assignments/${assignmentId}`, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          \r\n          const assignment = assignmentResponse.data.data.assignment;\r\n          setFormData({\r\n            title: assignment.title,\r\n            description: assignment.description,\r\n            dueDate: assignment.dueDate ? new Date(assignment.dueDate).toISOString().split('T')[0] : '',\r\n            totalPoints: assignment.totalPoints,\r\n            isPublished: assignment.isPublished,\r\n            lesson: assignment.lesson?._id || ''\r\n          });\r\n        }\r\n        \r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load data. Please try again.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [courseId, lessonId, assignmentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    \r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setError('');\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Prepare data to send\r\n      const assignmentData = {\r\n        ...formData,\r\n        course: courseId // Ensure the assignment is associated with the course\r\n      };\r\n      \r\n      if (assignmentId) {\r\n        // Update existing assignment\r\n        await axios.patch(`${API_URL}/assignments/${assignmentId}`, assignmentData, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        navigate(`/assignments/${assignmentId}`);\r\n      } else {\r\n        // Create new assignment\r\n        let endpoint = `${API_URL}/assignments`;\r\n        \r\n        // If we have a lesson ID, use the lesson-specific endpoint\r\n        if (lessonId) {\r\n          endpoint = `${API_URL}/lessons/${lessonId}/assignments`;\r\n        } else if (courseId) {\r\n          endpoint = `${API_URL}/courses/${courseId}/assignments`;\r\n        }\r\n        \r\n        const response = await axios.post(endpoint, assignmentData, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        navigate(`/assignments/${response.data.data.assignment._id}`);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to save assignment. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '60vh' }}>\r\n        <Spinner animation=\"border\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card>\r\n            <Card.Header as=\"h4\" className=\"bg-primary text-white\">\r\n              {assignmentId ? 'Edit Assignment' : 'Create New Assignment'}\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              \r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Title</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    onChange={handleChange}\r\n                    rows={5}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                \r\n                {lessons.length > 0 && (\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Lesson (optional)</Form.Label>\r\n                    <Form.Select\r\n                      name=\"lesson\"\r\n                      value={formData.lesson}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"\">-- Select a Lesson --</option>\r\n                      {lessons.map(lesson => (\r\n                        <option key={lesson._id} value={lesson._id}>\r\n                          {lesson.title}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                    <Form.Text className=\"text-muted\">\r\n                      Associate this assignment with a specific lesson\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                )}\r\n                \r\n                <Row>\r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Due Date (optional)</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        name=\"dueDate\"\r\n                        value={formData.dueDate}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  \r\n                  <Col md={6}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Total Points</Form.Label>\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        name=\"totalPoints\"\r\n                        value={formData.totalPoints}\r\n                        onChange={handleChange}\r\n                        min=\"1\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    name=\"isPublished\"\r\n                    id=\"publishedCheckbox\"\r\n                    label=\"Publish Assignment (make it visible to students)\"\r\n                    checked={formData.isPublished}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                \r\n                <div className=\"d-flex justify-content-between mt-4\">\r\n                  <Button \r\n                    variant=\"secondary\" \r\n                    onClick={() => navigate(courseId ? `/courses/${courseId}` : '/dashboard')}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    type=\"submit\" \r\n                    disabled={isSubmitting}\r\n                  >\r\n                    {isSubmitting ? 'Saving...' : (assignmentId ? 'Update Assignment' : 'Create Assignment')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssignmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}