{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../config';\n\n// Helper to get authorization header\nconst authHeader = () => {\n  const token = localStorage.getItem('token');\n  return {\n    Authorization: `Bearer ${token}`\n  };\n};\n\n// Get all assignments\nexport const getAssignments = async (courseId = null, lessonId = null) => {\n  try {\n    let url = `${API_URL}/assignments`;\n    if (courseId) {\n      url = `${API_URL}/courses/${courseId}/assignments`;\n    } else if (lessonId) {\n      url = `${API_URL}/lessons/${lessonId}/assignments`;\n    }\n    const response = await axios.get(url, {\n      headers: authHeader()\n    });\n    return response.data.data.assignments;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get a single assignment by ID\nexport const getAssignment = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/assignments/${id}`, {\n      headers: authHeader()\n    });\n    return response.data.data.assignment;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Alias for getAssignment to match the usage in components\nexport const getAssignmentById = getAssignment;\n\n// Create a new assignment\nexport const createAssignment = async (assignmentData, courseId = null, lessonId = null) => {\n  try {\n    let url = `${API_URL}/assignments`;\n    if (courseId) {\n      url = `${API_URL}/courses/${courseId}/assignments`;\n    } else if (lessonId) {\n      url = `${API_URL}/lessons/${lessonId}/assignments`;\n    }\n    const response = await axios.post(url, assignmentData, {\n      headers: authHeader()\n    });\n    return response.data.data.assignment;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update an existing assignment\nexport const updateAssignment = async (id, assignmentData) => {\n  try {\n    const response = await axios.patch(`${API_URL}/assignments/${id}`, assignmentData, {\n      headers: authHeader()\n    });\n    return response.data.data.assignment;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete an assignment\nexport const deleteAssignment = async id => {\n  try {\n    await axios.delete(`${API_URL}/assignments/${id}`, {\n      headers: authHeader()\n    });\n    return true;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Submit an assignment\nexport const submitAssignment = async (id, submissionData) => {\n  try {\n    const response = await axios.post(`${API_URL}/assignments/${id}/submit`, submissionData, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Grade an assignment submission (both function names for compatibility)\nexport const gradeSubmission = async (assignmentId, submissionId, gradeData) => {\n  try {\n    const response = await axios.post(`${API_URL}/assignments/${assignmentId}/grade/${submissionId}`, gradeData, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const gradeAssignment = gradeSubmission;\n\n// For backward compatibility with default export\nconst assignmentService = {\n  getAssignments,\n  getAssignment,\n  getAssignmentById,\n  createAssignment,\n  updateAssignment,\n  deleteAssignment,\n  submitAssignment,\n  gradeSubmission,\n  gradeAssignment\n};\nexport default assignmentService;","map":{"version":3,"names":["axios","API_URL","authHeader","token","localStorage","getItem","Authorization","getAssignments","courseId","lessonId","url","response","get","headers","data","assignments","error","getAssignment","id","assignment","getAssignmentById","createAssignment","assignmentData","post","updateAssignment","patch","deleteAssignment","delete","submitAssignment","submissionData","gradeSubmission","assignmentId","submissionId","gradeData","gradeAssignment","assignmentService"],"sources":["C:/Users/User/Desktop/Coding/LMS/frontend/src/services/assignmentService.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// Helper to get authorization header\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  return { Authorization: `Bearer ${token}` };\r\n};\r\n\r\n// Get all assignments\r\nexport const getAssignments = async (courseId = null, lessonId = null) => {\r\n  try {\r\n    let url = `${API_URL}/assignments`;\r\n    \r\n    if (courseId) {\r\n      url = `${API_URL}/courses/${courseId}/assignments`;\r\n    } else if (lessonId) {\r\n      url = `${API_URL}/lessons/${lessonId}/assignments`;\r\n    }\r\n    \r\n    const response = await axios.get(url, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return response.data.data.assignments;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a single assignment by ID\r\nexport const getAssignment = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/assignments/${id}`, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return response.data.data.assignment;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Alias for getAssignment to match the usage in components\r\nexport const getAssignmentById = getAssignment;\r\n\r\n// Create a new assignment\r\nexport const createAssignment = async (assignmentData, courseId = null, lessonId = null) => {\r\n  try {\r\n    let url = `${API_URL}/assignments`;\r\n    \r\n    if (courseId) {\r\n      url = `${API_URL}/courses/${courseId}/assignments`;\r\n    } else if (lessonId) {\r\n      url = `${API_URL}/lessons/${lessonId}/assignments`;\r\n    }\r\n    \r\n    const response = await axios.post(url, assignmentData, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return response.data.data.assignment;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update an existing assignment\r\nexport const updateAssignment = async (id, assignmentData) => {\r\n  try {\r\n    const response = await axios.patch(`${API_URL}/assignments/${id}`, assignmentData, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return response.data.data.assignment;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete an assignment\r\nexport const deleteAssignment = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/assignments/${id}`, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Submit an assignment\r\nexport const submitAssignment = async (id, submissionData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/assignments/${id}/submit`, submissionData, {\r\n      headers: authHeader()\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Grade an assignment submission (both function names for compatibility)\r\nexport const gradeSubmission = async (assignmentId, submissionId, gradeData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/assignments/${assignmentId}/grade/${submissionId}`, \r\n      gradeData,\r\n      { headers: authHeader() }\r\n    );\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const gradeAssignment = gradeSubmission;\r\n\r\n// For backward compatibility with default export\r\nconst assignmentService = {\r\n  getAssignments,\r\n  getAssignment,\r\n  getAssignmentById,\r\n  createAssignment,\r\n  updateAssignment,\r\n  deleteAssignment,\r\n  submitAssignment,\r\n  gradeSubmission,\r\n  gradeAssignment\r\n};\r\n\r\nexport default assignmentService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}