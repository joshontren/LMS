{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Coding\\\\LMS\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\n// Create the Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        const response = await axios.get(`${API_URL}/users/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.status === 'success') {\n          setUser(response.data.data.user);\n          setIsAuthenticated(true);\n        }\n      } catch (err) {\n        console.error('Authentication error:', err);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/users/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        data\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', data.user._id);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data.user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Register user\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/users/signup`, userData);\n      const {\n        token,\n        data\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', data.user._id);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data.user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"UiON1ZH++zn0GBf7+ry+rtRn1s8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","checkLoggedIn","token","localStorage","getItem","response","get","headers","Authorization","data","status","err","console","removeItem","login","email","password","post","setItem","_id","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","updateUser","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Coding/LMS/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// Create the Auth Context\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.get(`${API_URL}/users/me`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        if (response.data.status === 'success') {\r\n          setUser(response.data.data.user);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (err) {\r\n        console.error('Authentication error:', err);\r\n        localStorage.removeItem('token');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/users/login`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      const { token, data } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('userId', data.user._id);\r\n      \r\n      setUser(data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return data.user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Login failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/users/signup`, userData);\r\n      \r\n      const { token, data } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('userId', data.user._id);\r\n      \r\n      setUser(data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      return data.user;\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Registration failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Update user\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}